# Description experiment: Double Entry client to test timeouts
experiment_name = DoubleEntry_local_timeout

workspace_dir = output

tracker_cmd = 'run_tracker.sh'
# tracker_run_remote =
tracker_port = 7788

experiment_server_cmd = 'experiment_server.py'


# Command used to start (the local part of) the experiment. This will be executed concurrently with its remote counterpart if set (see below)
local_instance_cmd = "process_guard.py -c doubleentry_client.py  -c doubleentry_client.py -c doubleentry_client.py  -c doubleentry_client.py -c doubleentry_client.py -c doubleentry_client.py -c doubleentry_client.py -c doubleentry_client.py"

# Process guard timeout in seconds, set to 0 to disable (default: 30)
experiment_time = 900

# Port where we should listen on. (required)
sync_port = __unique_port__
# Override the experiment synchronization server host to which the sync clients will try to connect to (default is HEAD_HOST)
sync_host = 127.0.0.1
#
# Number of sync clients we should wait for to be registered before starting the experiment. (default is DAS4_INSTANCES_TO_RUN)
sync_subscribers_amount = 8

#
# Config options:
#
# Output dir for local running experiments (so not on DAS4).
local_output_dir ="output"


# Dir where to write all the output generated from the experiment (default is workspace_dir/output)
output_dir = "output/doubleentry_timeout"