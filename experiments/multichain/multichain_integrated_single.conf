# This is a gumby experiment config file
# Description experiment: Simple gumby experiment to learn gumby.
#
experiment_name = MultiChain_integrated_single

###
### Gumby core configuration options:
###
#
# Directory where to store the output files generated by your experiment and the helper scripts.
workspace_dir = output

#
# Comma separated list of nodes to run the remote_* commands (they can be das4 head nodes or any UNIX host with SSH and rsync installed)
# Take into account that if you use a single node you still need to add a comma at the end.
# head_nodes = node1,node2,node3
#

tracker_cmd = 'run_tracker.sh'
# tracker_run_remote =
tracker_port = 7788

experiment_server_cmd = 'experiment_server.py'

#
# Set this to true if you want the experiment synchronization server to be started on each of the remote nodes.
# Defaults to false
# experiment_server_run_remote =
#
# Command used to locally set up the all the stuff needed to set up the experiment (dependencies, compilations, etc.)
# This will be executed in parallel with the remote counterparts (see below)
# local_setup_cmd =
#
# Same than local_setup_cmd, but executed in each of the remote nodes.
# remote_setup_cmd =
#
# Command used to start (the local part of) the experiment. This will be executed concurrently with its remote counterpart if set (see below)
local_instance_cmd = "process_guard.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py -c multichain_integrated_client.py  -c multichain_integrated_client.py"

#
# Command used to start (the remote part of) the experiment. This will be executed concurrently with its local counterpart if set (see above)
# remote_instance_cmd =
#
# Command used to post-process the data obtained from the experiment (aggregate data, graph stuff, etc.), this command will be run locally.
# post_process_cmd =
#
# Use a virtualenv locally? (see http://www.virtualenv.org/en/latest/virtualenv.html if you don't know what this is)
# Defaults to true
use_local_venv = False
experiment_time = 250

# Port where we should listen on. (required)
sync_port = __unique_port__
# Override the experiment synchronization server host to which the sync clients will try to connect to (default is HEAD_HOST)
sync_host = 127.0.0.1
#
# Number of sync clients we should wait for to be registered before starting the experiment. (default is DAS4_INSTANCES_TO_RUN)
sync_subscribers_amount = 8

sync_experiment_start_delay = 1

local_output_dir ="output"

output_dir = "output/multichain"


